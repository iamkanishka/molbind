// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                     String                  @id @default(uuid())
  address                String                  @unique
  lastLoginAt            DateTime?
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt

  moleculeOptimizations  MoleculeOptimization[]  // One-to-many relation

  @@map("users")
}

model MoleculeOptimization {
  id                  String   @id @default(uuid())
  algorithm           String
  numMolecules        Int
  propertyName        String
  minimize            Boolean  @default(false)
  minSimilarity       Float
  particles           Int
  iterations          Int
  smi                 String
  generatedMolecules  Json     @default("{}")
  userId              String
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("molecule_optimizations")
  @@index([userId]) // This creates the index on user_id like in Ecto
}

